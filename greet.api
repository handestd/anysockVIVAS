info (
	title: "anysock system"// TODO: add title
	desc: "simple api with go-zero"
	author: "tiendat"
	email: "handestd@gmail.com"
)
type (
	PayloadReq {
		Message string `json:"message"`
	}
	TextResp {
		Message string `json:"message"`
	}
)

type
(
	UserRandomReq {
	}

	UserRandomResp {
		Name       string `json:"name"`
		Address    string `json:"address"`
		City       string `json:"city"`
		State      string `json:"state"`
		PostalCode string `json:"postal_code"`
		Email      string `json:"email"`
		Password   string `json:"password"`
		Phone      string `json:"phone"`
	}

)

type (
	getUserReq {
	}
	GetUserResp {
		Username string `json:"username"`
		Email    string `json:"email"`
		Balance  int64  `json:"balance"`
	}

	getUsersReq {
	}
	getUsersResp {
		Users []GetUserResp `json:"users"`
	}
)

type (
	RegisterReq {
		Username string `json:"username"`
		Password string `json:"password"`
		Email    string `json:"email"`
		Balance  int64  `json:"balance"`
	}
	RegisterResp {
		Id           int64  `json:"id"`
		Name         string `json:"name"`
		ErrorMessage string `json:"errorMessage"`
	}
)

type (
	LoginReq {
		Username string `json:"username"`
		Password string `json:"password"`
	}

	LoginResp {
		Id           int64  `json:"id"`
		Name         string `json:"name"`
		AccessToken  string `json:"access_token"`
		AccessExpire int64  `json:"access_expire"`
		RefreshAfter int64  `json:"refresh_after"`
		ErrorMessage string `json:"errorMessage"`
	}
)
@server (
	prefix: /v1
	group: user
)
service user {
	@handler Login
	post /user/login (LoginReq) returns (LoginResp)

	@handler Register
	post /user/register (RegisterReq) returns (RegisterResp)
}

@server (
	prefix: /v1
	group: test
)
service user {
	@handler SetRedis
	get /test/setredis (PayloadReq) returns (TextResp)

	@handler GetRedis
	get /test/getredis (PayloadReq) returns (TextResp)

	@handler RandomUser
	get /test/randomuser (UserRandomReq) returns (UserRandomResp)
}

@server(
	jwt: JwtAuth
	group: admin
)
service user {
	@handler User
	get /user (getUserReq) returns (GetUserResp)

	@handler Users
	get /users (getUsersReq) returns (getUsersResp)
}